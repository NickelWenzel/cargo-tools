{
  "name": "cargo-tools",
  "displayName": "Cargo Tools",
  "description": "Rust development tools for VSCode with build profiles, targets, and workspace integration",
  "version": "0.0.1",
  "publisher": "cargo-tools",
  "engines": {
    "vscode": "^1.102.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "rust",
    "cargo",
    "build",
    "development"
  ],
  "activationEvents": [
    "workspaceContains:Cargo.toml"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cargo-tools.selectProfile",
        "title": "Select Build Profile",
        "category": "Cargo Tools",
        "icon": "$(settings-gear)"
      },
      {
        "command": "cargo-tools.selectTarget",
        "title": "Select Build Target",
        "category": "Cargo Tools",
        "icon": "$(target)"
      },
      {
        "command": "cargo-tools.refresh",
        "title": "Refresh",
        "category": "Cargo Tools",
        "icon": "$(refresh)"
      },
      {
        "command": "cargo-tools.editConfiguration",
        "title": "Edit Configuration",
        "category": "Cargo Tools",
        "icon": "$(edit)"
      },
      {
        "command": "cargo-tools.runExample",
        "title": "Run Example",
        "category": "Cargo Tools",
        "icon": "$(lightbulb)"
      },
      {
        "command": "cargo-tools.runTest",
        "title": "Run Test",
        "category": "Cargo Tools",
        "icon": "$(beaker)"
      },
      {
        "command": "cargo-tools.runBench",
        "title": "Run Benchmark",
        "category": "Cargo Tools",
        "icon": "$(dashboard)"
      },
      {
        "command": "cargo-tools.buildTarget",
        "title": "Build Target",
        "category": "Cargo Tools",
        "icon": "$(tools)"
      },
      {
        "command": "cargo-tools.runTarget",
        "title": "Run Target",
        "category": "Cargo Tools",
        "icon": "$(play)"
      },
      {
        "command": "cargo-tools.testTarget",
        "title": "Test Target",
        "category": "Cargo Tools",
        "icon": "$(beaker)"
      },
      {
        "command": "cargo-tools.debugTarget",
        "title": "Debug Target",
        "category": "Cargo Tools",
        "icon": "$(debug-alt)"
      },
      {
        "command": "cargo-tools.benchTarget",
        "title": "Bench Target",
        "category": "Cargo Tools",
        "icon": "$(dashboard)"
      },
      {
        "command": "cargo-tools.setAsDefaultTarget",
        "title": "Set as Default Target",
        "category": "Cargo Tools",
        "icon": "$(star)"
      },
      {
        "command": "cargo-tools.setAsDefaultBuildTarget",
        "title": "Set as Default Build Target",
        "category": "Cargo Tools",
        "icon": "$(tools)"
      },
      {
        "command": "cargo-tools.setAsDefaultRunTarget",
        "title": "Set as Default Run Target",
        "category": "Cargo Tools",
        "icon": "$(play)"
      },
      {
        "command": "cargo-tools.setAsDefaultTestTarget",
        "title": "Set as Default Test Target",
        "category": "Cargo Tools",
        "icon": "$(beaker)"
      },
      {
        "command": "cargo-tools.setAsDefaultBenchTarget",
        "title": "Set as Default Bench Target",
        "category": "Cargo Tools",
        "icon": "$(dashboard)"
      },
      {
        "command": "cargo-tools.buildDefaultTarget",
        "title": "Build Default Target",
        "category": "Cargo Tools",
        "icon": "$(tools)"
      },
      {
        "command": "cargo-tools.runDefaultTarget",
        "title": "Run Default Target",
        "category": "Cargo Tools",
        "icon": "$(play)"
      },
      {
        "command": "cargo-tools.testDefaultTarget",
        "title": "Test Default Target",
        "category": "Cargo Tools",
        "icon": "$(beaker)"
      },
      {
        "command": "cargo-tools.benchDefaultTarget",
        "title": "Bench Default Target",
        "category": "Cargo Tools",
        "icon": "$(dashboard)"
      },
      {
        "command": "cargo-tools.executeBuildAction",
        "title": "Build",
        "category": "Cargo Tools",
        "icon": "$(tools)"
      },
      {
        "command": "cargo-tools.executeRunAction",
        "title": "Run",
        "category": "Cargo Tools",
        "icon": "$(play)"
      },
      {
        "command": "cargo-tools.executeTestAction",
        "title": "Test",
        "category": "Cargo Tools",
        "icon": "$(beaker)"
      },
      {
        "command": "cargo-tools.executeBenchAction",
        "title": "Bench",
        "category": "Cargo Tools",
        "icon": "$(dashboard)"
      },
      {
        "command": "cargo-tools.pinnedCommands.add",
        "title": "Add Command",
        "category": "Cargo Tools",
        "icon": "$(add)"
      },
      {
        "command": "cargo-tools.pinnedCommands.remove",
        "title": "Remove Command",
        "category": "Cargo Tools",
        "icon": "$(remove)"
      },
      {
        "command": "cargo-tools.pinnedCommands.run",
        "title": "Run Command",
        "category": "Cargo Tools",
        "icon": "$(play)"
      },
      {
        "command": "cargo-tools.executePinnedCommand",
        "title": "Execute Pinned Command",
        "category": "Cargo Tools"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cargoTools",
          "title": "Cargo Tools",
          "icon": "$(package)"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "cargoToolsExplorer",
          "name": "Cargo Tools",
          "when": "cargoTools:workspaceHasCargo"
        }
      ],
      "cargoTools": [
        {
          "id": "cargoToolsProjectStatus",
          "name": "Project Status",
          "when": "cargoTools:workspaceHasCargo"
        },
        {
          "id": "cargoToolsProjectOutline",
          "name": "Project Outline",
          "when": "cargoTools:workspaceHasCargo"
        },
        {
          "id": "cargoToolsPinnedCommands",
          "name": "Pinned Commands",
          "when": "cargoTools:workspaceHasCargo"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "cargo-tools.refresh",
          "when": "view == cargoToolsProjectStatus || view == cargoToolsProjectOutline",
          "group": "navigation"
        },
        {
          "command": "cargo-tools.pinnedCommands.add",
          "when": "view == cargoToolsPinnedCommands",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "cargo-tools.pinnedCommands.remove",
          "when": "view == cargoToolsPinnedCommands && viewItem == pinnedCommand",
          "group": "inline"
        },
        {
          "command": "cargo-tools.buildTarget",
          "when": "view == cargoToolsProjectOutline && viewItem =~ /cargoTarget/",
          "group": "target@1"
        },
        {
          "command": "cargo-tools.runTarget",
          "when": "view == cargoToolsProjectOutline && viewItem =~ /cargoTarget.*isExecutable/",
          "group": "target@2"
        },
        {
          "command": "cargo-tools.testTarget",
          "when": "view == cargoToolsProjectOutline && viewItem =~ /cargoTarget.*isTest/",
          "group": "target@3"
        },
        {
          "command": "cargo-tools.debugTarget",
          "when": "view == cargoToolsProjectOutline && viewItem =~ /cargoTarget.*isExecutable/",
          "group": "target@4"
        },
        {
          "command": "cargo-tools.setAsDefaultTarget",
          "when": "view == cargoToolsProjectOutline && viewItem =~ /cargoTarget/",
          "group": "default@1"
        }
      ],
      "commandPalette": [
        {
          "command": "cargo-tools.runExample",
          "when": "cargoTools:workspaceHasCargo"
        },
        {
          "command": "cargo-tools.runTest",
          "when": "cargoTools:workspaceHasCargo"
        },
        {
          "command": "cargo-tools.runBench",
          "when": "cargoTools:workspaceHasCargo"
        },
        {
          "command": "cargo-tools.pinnedCommands.add",
          "when": "cargoTools:workspaceHasCargo"
        }
      ]
    },
    "configuration": {
      "title": "Cargo Tools",
      "properties": {
        "cargoTools.defaultProfile": {
          "type": "string",
          "default": "dev",
          "description": "Default build profile to use",
          "enum": [
            "dev",
            "release"
          ],
          "enumDescriptions": [
            "Development profile with debug information",
            "Release profile with optimizations"
          ]
        },
        "cargoTools.cargoPath": {
          "type": "string",
          "default": "cargo",
          "description": "Path to the cargo executable"
        },
        "cargoTools.buildArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments to pass to cargo build"
        },
        "cargoTools.runArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments to pass to cargo run"
        },
        "cargoTools.testArgs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Additional arguments to pass to cargo test"
        },
        "cargoTools.environment": {
          "type": "object",
          "default": {},
          "description": "Environment variables to set when running cargo commands"
        },
        "cargoTools.features": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Default features to enable"
        },
        "cargoTools.allFeatures": {
          "type": "boolean",
          "default": false,
          "description": "Enable all features by default"
        },
        "cargoTools.noDefaultFeatures": {
          "type": "boolean",
          "default": false,
          "description": "Disable default features"
        },
        "cargoTools.groupTargetsByWorkspaceMember": {
          "type": "boolean",
          "default": true,
          "description": "Group targets by workspace member in the BUILD TARGETS tree view. When enabled, targets are first organized by workspace member, then by type (bin, lib, etc.). When disabled, targets are grouped directly by type."
        },
        "cargoTools.pinnedCommands": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "List of command IDs to pin to the Pinned Commands view"
        }
      }
    },
    "taskDefinitions": [
      {
        "type": "cargo",
        "required": [
          "command"
        ],
        "properties": {
          "command": {
            "type": "string",
            "description": "The cargo command to run"
          },
          "profile": {
            "type": "string",
            "description": "The build profile to use"
          },
          "target": {
            "type": "string",
            "description": "The target to build"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Features to enable"
          },
          "allFeatures": {
            "type": "boolean",
            "description": "Enable all features"
          },
          "noDefaultFeatures": {
            "type": "boolean",
            "description": "Disable default features"
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.102.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "ts-loader": "^9.5.2",
    "webpack": "^5.99.7",
    "webpack-cli": "^6.0.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2"
  }
}